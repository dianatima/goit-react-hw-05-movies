{"version":3,"file":"static/js/485.af00b5cb.chunk.js","mappings":"8PAEaA,E,QAAYC,EAAAA,IAAH,4I,mBCIhBC,GAAaC,EAAAA,EAAAA,OAAK,kBAAM,sCAAN,IA4BxB,EA1Bc,WACV,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WAEN,IAAMC,EAAS,mCAAG,+FACVC,EAAAA,EAAAA,MACDC,KAAKJ,GACPK,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACb,IALa,2CAAH,qDAOfJ,GACD,GAAE,KAIH,iCACE,SAACR,EAAD,gCACA,SAAC,EAAAe,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACE,SAACd,EAAD,CAAYG,OAAQA,QAI7B,C,2MC9BDY,IAAAA,SAAAA,QAAyB,+BAElB,IAAMR,EAAc,mCAAG,oGACVQ,IAAAA,IAChB,8DAF0B,cACtBC,EADsB,OAI5BL,QAAQC,IAAI,cAAeI,EAAIC,KAAKC,SAJR,kBAKrBF,EAAIC,KAAKC,SALY,2CAAH,qDAQdC,EAAU,mCAAG,WAAMC,GAAN,uFACJL,IAAAA,IAAA,iBACRK,EADQ,6DADI,cAClBC,EADkB,OAKxBV,QAAQC,IAAI,QAASS,EAAMJ,MALH,kBAMjBI,EAAMJ,MANW,2CAAH,sDASVK,EAAgB,mCAAG,WAAMC,GAAN,uFACTR,IAAAA,IAAA,uEAC6CQ,EAD7C,+CADS,UACxBpB,EADwB,OAK9BQ,QAAQC,IAAI,SAAUT,EAAOc,MACP,MAAlBd,EAAOqB,OANmB,yCAOrBC,QAAQC,OAAO,IAAIC,MAAJ,kCAPM,UAQW,IAA9BxB,EAAOc,KAAKW,cARO,0CASrBH,QAAQC,OACb,IAAIC,MAAJ,4CAA+CJ,EAA/C,QAV0B,iCAYhBpB,EAAOc,MAZS,4CAAH,sDAehBY,EAAS,mCAAG,WAAMT,GAAN,uFACFL,IAAAA,IAAA,iBACTK,EADS,qEADE,cACjBU,EADiB,OAKvBnB,QAAQC,IAAI,SAAUkB,EAAOb,MALN,kBAMhBa,EAAOb,MANS,2CAAH,sDASTc,EAAY,mCAAG,WAAMX,GAAN,uFACJL,IAAAA,IAAA,iBACVK,EADU,4EADI,cACpBY,EADoB,OAK1BrB,QAAQC,IAAI,UAAWoB,EAAQf,MALL,kBAMnBe,EAAQf,MANW,2CAAH,qD","sources":["pages/Home/Home.styled.jsx","pages/Home/Home.jsx","service/movie-service.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const HomeTitle = styled.div`\nfont-size: 2em;\nfont-weight: bold;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 70px;\n`;","import { useEffect, useState } from \"react\";\nimport { lazy, Suspense } from \"react\";\nimport { getTrendMovies } from 'service/movie-service';\nimport { HomeTitle } from './Home.styled';\nimport { LoadingView as Loading } from '../../components/LoadingView/LoadingView';\n\nconst MoviesList = lazy(() => import('../../components/MoviesList/MoviesList'));\n\n const Home = () => {\n    const [movies, setMovies] = useState([]);\n\n    useEffect(() => {\n     \n        const getMovies = async () => {\n          await getTrendMovies()\n              .then(setMovies)\n            .catch((error) => {\n              console.log(error);\n            });\n        };\n        getMovies();\n      }, []);\n\n    \n    return (\n      <>\n        <HomeTitle> Trending movies</HomeTitle>\n        <Suspense fallback={<Loading />}>\n          <MoviesList movies={movies} />\n        </Suspense>\n        </>\n    )\n}\n\nexport default Home","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendMovies = async () => {\n  const res = await axios.get(\n    '/trending/all/day?api_key=bea7dcda7b46099606e243fc961918ee'\n  );\n  console.log('trendMovies', res.data.results);\n  return res.data.results;\n};\n\nexport const fetchMovie = async movieId => {\n  const movie = await axios.get(\n    `/movie/${movieId}?api_key=bea7dcda7b46099606e243fc961918ee&language=en-US`\n  );\n\n  console.log('movie', movie.data);\n  return movie.data;\n};\n\nexport const fetchMovieSearch = async query => {\n  const movies = await axios.get(\n    `/search/movie?api_key=bea7dcda7b46099606e243fc961918ee&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  console.log('movies', movies.data);\n  if (movies.status !== 200) {\n    return Promise.reject(new Error(`Sorry, something go wrong...`));\n  } else if (movies.data.total_results === 0) {\n    return Promise.reject(\n      new Error(`Sorry, there are no movies named \"${query}\"`)\n    );\n  } else return movies.data;\n};\n\nexport const fetchCast = async movieId => {\n  const actors = await axios.get(\n    `/movie/${movieId}/credits?api_key=bea7dcda7b46099606e243fc961918ee&language=en-US`\n  );\n\n  console.log('actors', actors.data);\n  return actors.data;\n};\n\nexport const fetchReviews = async movieId => {\n  const reviews = await axios.get(\n    `/movie/${movieId}/reviews?api_key=bea7dcda7b46099606e243fc961918ee&language=en-US&page=1`\n  );\n\n  console.log('reviews', reviews.data);\n  return reviews.data;\n};\n"],"names":["HomeTitle","styled","MoviesList","lazy","useState","movies","setMovies","useEffect","getMovies","getTrendMovies","then","catch","error","console","log","Suspense","fallback","axios","res","data","results","fetchMovie","movieId","movie","fetchMovieSearch","query","status","Promise","reject","Error","total_results","fetchCast","actors","fetchReviews","reviews"],"sourceRoot":""}