{"version":3,"file":"static/js/134.94d209cb.chunk.js","mappings":"gRASMA,GAAaC,EAAAA,EAAAA,OAAK,kBAAM,sCAAN,IAEXC,EAAS,WAClB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAcF,EAAaG,IAAI,UAErCC,EAAAA,EAAAA,YAAU,WAEDF,IAELG,EAAAA,EAAAA,IAAiBH,GACZI,MAAK,SAAAT,GAAM,OAAIC,EAAUD,EAAOU,QAArB,IACXC,OAAM,SAACC,GAAD,OAAWC,EAAAA,GAAAA,MAAYD,EAAME,QAA7B,GAEd,GAAE,CAACT,IAMJ,OACI,iCACI,SAAC,KAAD,CAAcU,SANL,SAAAC,GACbZ,EAAgB,CAAEY,MAAAA,GACrB,KAKO,SAAC,EAAAC,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,SACuB,IAAlBlB,EAAOmB,SAAgB,SAACvB,EAAD,CAAYI,OAAQA,OAEhD,SAAC,KAAD,CAAgBoB,UAAW,QAGtC,EAED,W,2MCxCAC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAc,mCAAG,oGACVD,IAAAA,IAChB,8DAF0B,cACtBE,EADsB,OAI5BC,QAAQC,IAAI,cAAeF,EAAIG,KAAKhB,SAJR,kBAKrBa,EAAIG,KAAKhB,SALY,2CAAH,qDAQdiB,EAAU,mCAAG,WAAMC,GAAN,uFACJP,IAAAA,IAAA,iBACRO,EADQ,6DADI,cAClBC,EADkB,OAKxBL,QAAQC,IAAI,QAASI,EAAMH,MALH,kBAMjBG,EAAMH,MANW,2CAAH,sDASVlB,EAAgB,mCAAG,WAAMQ,GAAN,uFACTK,IAAAA,IAAA,uEAC6CL,EAD7C,+CADS,UACxBhB,EADwB,OAK9BwB,QAAQC,IAAI,SAAUzB,EAAO0B,MACP,MAAlB1B,EAAO8B,OANmB,yCAOrBC,QAAQC,OAAO,IAAIC,MAAJ,kCAPM,UAQW,IAA9BjC,EAAO0B,KAAKQ,cARO,0CASrBH,QAAQC,OACb,IAAIC,MAAJ,4CAA+CjB,EAA/C,QAV0B,iCAYhBhB,EAAO0B,MAZS,4CAAH,sDAehBS,EAAS,mCAAG,WAAMP,GAAN,uFACFP,IAAAA,IAAA,iBACTO,EADS,qEADE,cACjBQ,EADiB,OAKvBZ,QAAQC,IAAI,SAAUW,EAAOV,MALN,kBAMhBU,EAAOV,MANS,2CAAH,sDASTW,EAAY,mCAAG,WAAMT,GAAN,uFACJP,IAAAA,IAAA,iBACVO,EADU,4EADI,cACpBU,EADoB,OAK1Bd,QAAQC,IAAI,UAAWa,EAAQZ,MALL,kBAMnBY,EAAQZ,MANW,2CAAH,qD","sources":["pages/Movies.jsx","service/movie-service.js"],"sourcesContent":["import { MoviesSearch } from 'components';\nimport { useEffect, lazy, Suspense } from 'react';\nimport { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMovieSearch } from 'service/movie-service';\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { LoadingView as Loading } from '../components/LoadingView/LoadingView';\n\nconst MoviesList = lazy(() => import('../../src/components/MoviesList/MoviesList'));\n\nexport const Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    \n    const SearchQuery = searchParams.get('query');\n\n    useEffect(() => {\n        \n        if (!SearchQuery) return;\n\n        fetchMovieSearch(SearchQuery)\n            .then(movies => setMovies(movies.results))\n            .catch((error) => toast.error(error.message ))\n\n    }, [SearchQuery])\n\n    const onSubmit = query => {\n        setSearchParams({ query });\n    }  \n\n    return (\n        <>\n            <MoviesSearch onSubmit={onSubmit} />\n            <Suspense fallback={<Loading />}>\n                {movies.length !== 0 && <MoviesList movies={movies} />}\n            </Suspense>\n            <ToastContainer autoClose={3000} />\n        </>\n    )\n}\n\nexport default Movies","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendMovies = async () => {\n  const res = await axios.get(\n    '/trending/all/day?api_key=bea7dcda7b46099606e243fc961918ee'\n  );\n  console.log('trendMovies', res.data.results);\n  return res.data.results;\n};\n\nexport const fetchMovie = async movieId => {\n  const movie = await axios.get(\n    `/movie/${movieId}?api_key=bea7dcda7b46099606e243fc961918ee&language=en-US`\n  );\n\n  console.log('movie', movie.data);\n  return movie.data;\n};\n\nexport const fetchMovieSearch = async query => {\n  const movies = await axios.get(\n    `/search/movie?api_key=bea7dcda7b46099606e243fc961918ee&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  console.log('movies', movies.data);\n  if (movies.status !== 200) {\n    return Promise.reject(new Error(`Sorry, something go wrong...`));\n  } else if (movies.data.total_results === 0) {\n    return Promise.reject(\n      new Error(`Sorry, there are no movies named \"${query}\"`)\n    );\n  } else return movies.data;\n};\n\nexport const fetchCast = async movieId => {\n  const actors = await axios.get(\n    `/movie/${movieId}/credits?api_key=bea7dcda7b46099606e243fc961918ee&language=en-US`\n  );\n\n  console.log('actors', actors.data);\n  return actors.data;\n};\n\nexport const fetchReviews = async movieId => {\n  const reviews = await axios.get(\n    `/movie/${movieId}/reviews?api_key=bea7dcda7b46099606e243fc961918ee&language=en-US&page=1`\n  );\n\n  console.log('reviews', reviews.data);\n  return reviews.data;\n};\n"],"names":["MoviesList","lazy","Movies","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","SearchQuery","get","useEffect","fetchMovieSearch","then","results","catch","error","toast","message","onSubmit","query","Suspense","fallback","length","autoClose","axios","getTrendMovies","res","console","log","data","fetchMovie","movieId","movie","status","Promise","reject","Error","total_results","fetchCast","actors","fetchReviews","reviews"],"sourceRoot":""}