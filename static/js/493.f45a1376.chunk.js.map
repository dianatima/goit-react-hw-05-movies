{"version":3,"file":"static/js/493.f45a1376.chunk.js","mappings":"0PAMaA,EAAQ,WACjB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAQM,OANLC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,GAAUN,GAASO,KAAKH,GAAaI,OAAM,SAACC,GACzCC,QAAQC,IAAIF,EACb,GACA,GAAE,CAACT,IAEoB,IAApBG,EAASS,OACJ,MAIX,SAAC,EAAAC,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACI,SAAC,KAAD,CAAUX,SAAUA,KAG/B,EAED,W,2MCzBAY,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAc,mCAAG,oGACVD,IAAAA,IAChB,8DAF0B,cACtBE,EADsB,OAI5BP,QAAQC,IAAI,cAAeM,EAAIC,KAAKC,SAJR,kBAKrBF,EAAIC,KAAKC,SALY,2CAAH,qDAQdC,EAAU,mCAAG,WAAMpB,GAAN,uFACJe,IAAAA,IAAA,iBACRf,EADQ,6DADI,cAClBqB,EADkB,OAKxBX,QAAQC,IAAI,QAASU,EAAMH,MALH,kBAMjBG,EAAMH,MANW,2CAAH,sDASVI,EAAgB,mCAAG,WAAMC,GAAN,uFACTR,IAAAA,IAAA,uEAC6CQ,EAD7C,+CADS,UACxBC,EADwB,OAK9Bd,QAAQC,IAAI,SAAUa,EAAON,MACP,MAAlBM,EAAOC,OANmB,yCAOrBC,QAAQC,OAAO,IAAIC,MAAJ,kCAPM,UAQW,IAA9BJ,EAAON,KAAKW,cARO,0CASrBH,QAAQC,OACb,IAAIC,MAAJ,4CAA+CL,EAA/C,QAV0B,iCAYhBC,EAAON,MAZS,4CAAH,sDAehBZ,EAAS,mCAAG,WAAMN,GAAN,uFACFe,IAAAA,IAAA,iBACTf,EADS,qEADE,cACjB8B,EADiB,OAKvBpB,QAAQC,IAAI,SAAUmB,EAAOZ,MALN,kBAMhBY,EAAOZ,MANS,2CAAH,sDASTa,EAAY,mCAAG,WAAM/B,GAAN,uFACJe,IAAAA,IAAA,iBACVf,EADU,4EADI,cACpBgC,EADoB,OAK1BtB,QAAQC,IAAI,UAAWqB,EAAQd,MALL,kBAMnBc,EAAQd,MANW,2CAAH,qD","sources":["pages/Cast.jsx","service/movie-service.js"],"sourcesContent":["import { CastInfo } from 'components';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { fetchCast } from 'service/movie-service';\nimport { LoadingView as Loading } from '../components/LoadingView/LoadingView';\n\nexport const Cast =  () => {\n    const { movieId } = useParams();\n    const [castData, setCastData] = useState([]);\n\n     useEffect(() => {\n         fetchCast(movieId).then(setCastData).catch((error) => {\n            console.log(error);\n          })\n          }, [movieId]);\n       \n          if (castData.length === 0) { \n            return null;\n        }\n\n    return (\n        <Suspense fallback={<Loading />}>\n            <CastInfo castData={castData} />\n        </Suspense>\n    )\n}\n\nexport default Cast","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendMovies = async () => {\n  const res = await axios.get(\n    '/trending/all/day?api_key=bea7dcda7b46099606e243fc961918ee'\n  );\n  console.log('trendMovies', res.data.results);\n  return res.data.results;\n};\n\nexport const fetchMovie = async movieId => {\n  const movie = await axios.get(\n    `/movie/${movieId}?api_key=bea7dcda7b46099606e243fc961918ee&language=en-US`\n  );\n\n  console.log('movie', movie.data);\n  return movie.data;\n};\n\nexport const fetchMovieSearch = async query => {\n  const movies = await axios.get(\n    `/search/movie?api_key=bea7dcda7b46099606e243fc961918ee&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  console.log('movies', movies.data);\n  if (movies.status !== 200) {\n    return Promise.reject(new Error(`Sorry, something go wrong...`));\n  } else if (movies.data.total_results === 0) {\n    return Promise.reject(\n      new Error(`Sorry, there are no movies named \"${query}\"`)\n    );\n  } else return movies.data;\n};\n\nexport const fetchCast = async movieId => {\n  const actors = await axios.get(\n    `/movie/${movieId}/credits?api_key=bea7dcda7b46099606e243fc961918ee&language=en-US`\n  );\n\n  console.log('actors', actors.data);\n  return actors.data;\n};\n\nexport const fetchReviews = async movieId => {\n  const reviews = await axios.get(\n    `/movie/${movieId}/reviews?api_key=bea7dcda7b46099606e243fc961918ee&language=en-US&page=1`\n  );\n\n  console.log('reviews', reviews.data);\n  return reviews.data;\n};\n"],"names":["Cast","movieId","useParams","useState","castData","setCastData","useEffect","fetchCast","then","catch","error","console","log","length","Suspense","fallback","axios","getTrendMovies","res","data","results","fetchMovie","movie","fetchMovieSearch","query","movies","status","Promise","reject","Error","total_results","actors","fetchReviews","reviews"],"sourceRoot":""}